name: Elixir CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  MIX_ENV: test

jobs:
  build:

    name: Build and test
    runs-on: ubuntu-latest

    strategy:
      matrix:
        elixir: [1.11.2]
        otp: [23.2.7]

    steps:
    - uses: actions/checkout@v2
    - name: Set up Elixir
      uses: erlef/setup-elixir@885971a72ed1f9240973bd92ab57af8c1aa68f24
      with:
        elixir-version: ${{ matrix.elixir }}
        otp-version: ${{ matrix.otp }}
    - name: Restore dependencies cache
      id: mix-cache
      uses: actions/cache@v2
      with:
        path: deps
        key: ${{ runner.os }}-${{ matrix.elixir }}-${{ matrix.otp}}-mix-${{ hashFiles('**/mix.lock') }}
        restore-keys: ${{ runner.os }}-${{ matrix.elixir }}-${{ matrix.otp}}-mix- 
    - name: Install dependencies
      if: steps.mix-cache.outputs.cache-hit != 'true'
      run: mix deps.get
    - name: Ensure Code is Formatted
      run: mix format --check-formatted
    - name: Credo
      run: mix credo --strict
    - name: Dialyzer PLT cache
      uses: actions/cache@v2
      id: plt-cache
      with:
        path: priv/plts
        key: ${{ runner.os }}-${{ matrix.elixir }}-${{ matrix.otp}}-plts-${{ hashFiles('**/mix.lock') }}
        restore-keys: ${{ runner.os }}-${{ matrix.elixir }}-${{ matrix.otp}}-plts- 
    - name: Create Dialyzer PLTs
      if: steps.plt-cache.outputs.cache-hit != 'true'
      run: |
        mkdir -p priv/plts
        mix dialyzer --plt
    - name: Run Dialyzer
      run: mix dialyzer --no-check --halt-exit-status
    - name: Run tests
      run: mix test
